import {
  J,
  R,
  S,
  j as j2
} from "./chunk-732DGFZL.js";
import {
  C as C2,
  E
} from "./chunk-Q4AYEMRE.js";
import {
  B,
  C,
  j,
  nn,
  z
} from "./chunk-QYFNBIJB.js";
import {
  It,
  Ot,
  Sn,
  St,
  Ur,
  Wn,
  Xe,
  animated,
  band,
  gn,
  jn,
  k,
  linear,
  lr,
  to,
  useTransition,
  w,
  wt,
  zt
} from "./chunk-XV5DIAUC.js";
import "./chunk-CY2I7XHN.js";
import "./chunk-NXESFFTV.js";
import {
  require_jsx_runtime
} from "./chunk-6PXSGDAH.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@nivo/heatmap/dist/nivo-heatmap.es.js
var import_react = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
function Y() {
  return Y = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var i2 = arguments[t2];
      for (var o2 in i2) Object.prototype.hasOwnProperty.call(i2, o2) && (e2[o2] = i2[o2]);
    }
    return e2;
  }, Y.apply(this, arguments);
}
function G(e2, t2) {
  if (null == e2) return {};
  var i2, o2, n2 = {}, r2 = Object.keys(e2);
  for (o2 = 0; o2 < r2.length; o2++) i2 = r2[o2], t2.indexOf(i2) >= 0 || (n2[i2] = e2[i2]);
  return n2;
}
var j3 = { layers: ["grid", "axes", "cells", "legends", "annotations"], forceSquare: false, xInnerPadding: 0, xOuterPadding: 0, yInnerPadding: 0, yOuterPadding: 0, sizeVariation: false, opacity: 1, activeOpacity: 1, inactiveOpacity: 0.15, borderWidth: 0, borderColor: { from: "color", modifiers: [["darker", 0.8]] }, enableGridX: false, enableGridY: false, enableLabels: true, label: "formattedValue", labelTextColor: { from: "color", modifiers: [["darker", 2]] }, colors: { type: "sequential", scheme: "brown_blueGreen" }, emptyColor: "#000000", legends: [], annotations: [], isInteractive: true, hoverTarget: "rowColumn", tooltip: (0, import_react.memo)(function(e2) {
  var t2 = e2.cell;
  return null === t2.formattedValue ? null : (0, import_jsx_runtime.jsx)(w, { id: t2.serieId + " - " + t2.data.x, value: t2.formattedValue, enableChip: true, color: t2.color });
}), animate: true, motionConfig: "gentle" };
var H = Y({}, j3, { axisTop: {}, axisRight: null, axisBottom: null, axisLeft: {}, borderRadius: 0, cellComponent: "rect" });
var D = Y({}, j3, { axisTop: {}, axisRight: null, axisBottom: null, axisLeft: {}, renderCell: "rect", pixelRatio: "undefined" != typeof window && window.devicePixelRatio || 1 });
var _ = function(e2) {
  var t2 = e2.width, i2 = e2.height, o2 = e2.rows, n2 = e2.columns, r2 = t2, a2 = i2, l2 = 0, d = 0;
  if (e2.forceSquare) {
    var c = Math.max(t2 / n2, 0), u = Math.max(i2 / o2, 0), s = Math.min(c, u);
    l2 = (t2 - (r2 = s * n2)) / 2, d = (i2 - (a2 = s * o2)) / 2;
  }
  return { offsetX: l2, offsetY: d, width: r2, height: a2 };
};
var J2 = function(e2) {
  var t2 = e2.data, i2 = e2.width, o2 = e2.height, n2 = e2.xInnerPadding, r2 = e2.xOuterPadding, a2 = e2.yInnerPadding, l2 = e2.yOuterPadding, d = e2.forceSquare, c = /* @__PURE__ */ new Set(), u = [], s = [], h = [];
  t2.forEach(function(e3) {
    u.push(e3.id), e3.data.forEach(function(t3) {
      c.add(t3.x);
      var i3 = null;
      void 0 !== t3.y && null !== t3.y && (s.push(t3.y), i3 = t3.y), h.push({ id: e3.id + "." + t3.x, serieId: e3.id, value: i3, data: t3 });
    });
  });
  var v = Array.from(c), f = _({ width: i2, height: o2, columns: v.length, rows: u.length, forceSquare: d }), g = f.width, b = f.height, p = f.offsetX, y = f.offsetY, m = nn(band().domain(v).range([0, g]).paddingOuter(r2).paddingInner(n2)), x = nn(band().domain(u).range([0, b]).paddingOuter(l2).paddingInner(a2)), C3 = m.bandwidth(), w2 = x.bandwidth(), P = h.map(function(e3) {
    return Y({}, e3, { x: m(e3.data.x) + C3 / 2, y: x(e3.serieId) + w2 / 2, width: C3, height: w2 });
  });
  return { width: g, height: b, offsetX: p, offsetY: y, xScale: m, yScale: x, minValue: Math.min.apply(Math, s), maxValue: Math.max.apply(Math, s), cells: P };
};
var K = function(e2, t2, i2) {
  if (!e2) return function() {
    return 1;
  };
  var o2 = linear().domain(e2.values ? e2.values : [t2, i2]).range(e2.sizes);
  return function(e3) {
    return null === e3 ? 1 : o2(e3);
  };
};
var N = function(e2) {
  return { x: e2.x, y: e2.y };
};
var Q = function(e2) {
  return { size: Math.max(e2.width, e2.height), width: e2.width, height: e2.height };
};
var U = function(e2) {
  var i2 = e2.data, o2 = e2.width, n2 = e2.height, r2 = e2.xInnerPadding, a2 = e2.xOuterPadding, l2 = e2.yInnerPadding, d = e2.yOuterPadding, c = e2.forceSquare;
  return (0, import_react.useMemo)(function() {
    return J2({ data: i2, width: o2, height: n2, xInnerPadding: r2, xOuterPadding: a2, yInnerPadding: l2, yOuterPadding: d, forceSquare: c });
  }, [i2, o2, n2, r2, a2, l2, d, c]);
};
var Z = { cell: function(e2, t2) {
  return e2.id === t2.id;
}, row: function(e2, t2) {
  return e2.serieId === t2.serieId;
}, column: function(e2, t2) {
  return e2.data.x === t2.data.x;
}, rowColumn: function(e2, t2) {
  return e2.serieId === t2.serieId || e2.data.x === t2.data.x;
} };
var $ = function(e2) {
  var i2, n2, r2, a2 = e2.cells, l2 = e2.minValue, s = e2.maxValue, h = e2.sizeVariation, v = e2.colors, f = e2.emptyColor, g = e2.opacity, b = e2.activeOpacity, p = e2.inactiveOpacity, y = e2.borderColor, m = e2.label, x = e2.labelTextColor, C3 = e2.valueFormat, w2 = e2.activeIds, P = (0, import_react.useMemo)(function() {
    return K(i2, n2, r2);
  }, [i2 = h, n2 = l2, r2 = s]), S2 = (0, import_react.useMemo)(function() {
    return "function" == typeof v ? null : lr(v, { min: l2, max: s });
  }, [v, l2, s]), M = (0, import_react.useCallback)(function(e3) {
    if (null !== e3.value) {
      if ("function" == typeof v) return v(e3);
      if (null !== S2) return S2(e3.value);
    }
    return f;
  }, [v, S2, f]), T = zt(), W = Xe(y, T), L = Xe(x, T), k2 = Ot(C3), V2 = Wn(m);
  return { cells: (0, import_react.useMemo)(function() {
    return a2.map(function(e3) {
      var t2 = g;
      w2.length > 0 && (t2 = w2.includes(e3.id) ? b : p);
      var i3 = P(e3.value), o2 = Y({}, e3, { width: e3.width * i3, height: e3.height * i3, formattedValue: null !== e3.value ? k2(e3.value) : null, opacity: t2 });
      return o2.label = V2(o2), o2.color = M(o2), o2.borderColor = W(o2), o2.labelTextColor = L(o2), o2;
    });
  }, [a2, P, M, W, L, k2, V2, w2, g, b, p]), colorScale: S2 };
};
var ee = function(e2) {
  var o2 = e2.data, n2 = e2.valueFormat, r2 = e2.width, a2 = e2.height, l2 = e2.xOuterPadding, d = void 0 === l2 ? j3.xOuterPadding : l2, c = e2.xInnerPadding, u = void 0 === c ? j3.xInnerPadding : c, s = e2.yOuterPadding, h = void 0 === s ? j3.yOuterPadding : s, v = e2.yInnerPadding, f = void 0 === v ? j3.yInnerPadding : v, g = e2.forceSquare, b = void 0 === g ? j3.forceSquare : g, p = e2.sizeVariation, y = void 0 === p ? j3.sizeVariation : p, m = e2.colors, x = void 0 === m ? j3.colors : m, C3 = e2.emptyColor, w2 = void 0 === C3 ? j3.emptyColor : C3, P = e2.opacity, O = void 0 === P ? j3.opacity : P, I = e2.activeOpacity, S2 = void 0 === I ? j3.activeOpacity : I, M = e2.inactiveOpacity, T = void 0 === M ? j3.inactiveOpacity : M, W = e2.borderColor, L = void 0 === W ? j3.borderColor : W, k2 = e2.label, V2 = void 0 === k2 ? j3.label : k2, R3 = e2.labelTextColor, B3 = void 0 === R3 ? j3.labelTextColor : R3, q = e2.hoverTarget, E2 = void 0 === q ? j3.hoverTarget : q, z2 = (0, import_react.useState)(null), A = z2[0], F = z2[1], X = U({ data: o2, width: r2, height: a2, xOuterPadding: d, xInnerPadding: u, yOuterPadding: h, yInnerPadding: f, forceSquare: b }), Y2 = X.width, G2 = X.height, H2 = X.offsetX, D2 = X.offsetY, _2 = X.cells, J3 = X.xScale, K2 = X.yScale, N2 = X.minValue, Q2 = X.maxValue, ee2 = (0, import_react.useMemo)(function() {
    if (!A) return [];
    var e3 = Z[E2];
    return _2.filter(function(t2) {
      return e3(t2, A);
    }).map(function(e4) {
      return e4.id;
    });
  }, [_2, A, E2]), te2 = $({ cells: _2, minValue: N2, maxValue: Q2, sizeVariation: y, colors: x, emptyColor: w2, opacity: O, activeOpacity: S2, inactiveOpacity: T, borderColor: L, label: V2, labelTextColor: B3, valueFormat: n2, activeIds: ee2 });
  return { width: Y2, height: G2, offsetX: H2, offsetY: D2, cells: te2.cells, xScale: J3, yScale: K2, colorScale: te2.colorScale, activeCell: A, setActiveCell: F };
};
var te = function(e2, t2) {
  return S({ data: e2, annotations: t2, getPosition: N, getDimensions: Q });
};
var ie = (0, import_react.memo)(function(e2) {
  var i2 = e2.cell, o2 = e2.borderWidth, n2 = e2.borderRadius, r2 = e2.animatedProps, a2 = e2.onMouseEnter, l2 = e2.onMouseMove, c = e2.onMouseLeave, u = e2.onClick, s = e2.enableLabels, h = zt(), v = (0, import_react.useMemo)(function() {
    return { onMouseEnter: a2 ? a2(i2) : void 0, onMouseMove: l2 ? l2(i2) : void 0, onMouseLeave: c ? c(i2) : void 0, onClick: u ? u(i2) : void 0 };
  }, [i2, a2, l2, c, u]);
  return (0, import_jsx_runtime.jsxs)(animated.g, Y({ "data-testid": "cell." + i2.id, style: { cursor: "pointer" }, opacity: r2.opacity }, v, { transform: to([r2.x, r2.y, r2.scale], function(e3, t2, i3) {
    return "translate(" + e3 + ", " + t2 + ") scale(" + i3 + ")";
  }), children: [(0, import_jsx_runtime.jsx)(animated.rect, { transform: to([r2.width, r2.height], function(e3, t2) {
    return "translate(" + -0.5 * e3 + ", " + -0.5 * t2 + ")";
  }), fill: r2.color, width: r2.width, height: r2.height, stroke: r2.borderColor, strokeWidth: o2, rx: n2, ry: n2 }, i2.id), s && (0, import_jsx_runtime.jsx)(animated.text, { textAnchor: "middle", dominantBaseline: "central", fill: r2.labelTextColor, style: Y({}, h.labels.text, { fill: void 0, userSelect: "none" }), children: i2.label })] }));
});
var oe = (0, import_react.memo)(function(e2) {
  var i2 = e2.cell, o2 = e2.borderWidth, n2 = e2.animatedProps, r2 = e2.onMouseEnter, a2 = e2.onMouseMove, l2 = e2.onMouseLeave, c = e2.onClick, u = e2.enableLabels, s = zt(), h = (0, import_react.useMemo)(function() {
    return { onMouseEnter: r2 ? r2(i2) : void 0, onMouseMove: a2 ? a2(i2) : void 0, onMouseLeave: l2 ? l2(i2) : void 0, onClick: c ? c(i2) : void 0 };
  }, [i2, r2, a2, l2, c]);
  return (0, import_jsx_runtime.jsxs)(animated.g, Y({ "data-testid": "cell." + i2.id, style: { cursor: "pointer" }, opacity: n2.opacity }, h, { transform: to([n2.x, n2.y], function(e3, t2) {
    return "translate(" + e3 + ", " + t2 + ")";
  }), children: [(0, import_jsx_runtime.jsx)(animated.circle, { r: to([n2.width, n2.height], function(e3, t2) {
    return Math.min(e3, t2) / 2;
  }), fill: n2.color, fillOpacity: n2.opacity, strokeWidth: o2, stroke: n2.borderColor }), u && (0, import_jsx_runtime.jsx)(animated.text, { dominantBaseline: "central", textAnchor: "middle", fill: n2.labelTextColor, style: Y({}, s.labels.text, { fill: void 0 }), children: i2.label })] }));
});
var ne = function(e2) {
  return { x: e2.x, y: e2.y, width: e2.width, height: e2.height, color: e2.color, opacity: 0, borderColor: e2.borderColor, labelTextColor: e2.labelTextColor, scale: 0 };
};
var re = function(e2) {
  return { x: e2.x, y: e2.y, width: e2.width, height: e2.height, color: e2.color, opacity: e2.opacity, borderColor: e2.borderColor, labelTextColor: e2.labelTextColor, scale: 1 };
};
var ae = function(e2) {
  return { x: e2.x, y: e2.y, width: e2.width, height: e2.height, color: e2.color, opacity: 0, borderColor: e2.borderColor, labelTextColor: e2.labelTextColor, scale: 0 };
};
var le = function(e2) {
  var i2, o2 = e2.cells, r2 = e2.cellComponent, a2 = e2.borderRadius, l2 = e2.borderWidth, d = e2.isInteractive, c = e2.setActiveCell, u = e2.onMouseEnter, h = e2.onMouseMove, v = e2.onMouseLeave, f = e2.onClick, g = e2.tooltip, b = e2.enableLabels, p = Ur(), y = p.animate, m = p.config, x = useTransition(o2, { keys: function(e3) {
    return e3.id;
  }, initial: re, from: ne, enter: re, update: re, leave: ae, config: m, immediate: !y }), C3 = k(), w2 = C3.showTooltipFromEvent, P = C3.hideTooltip, O = (0, import_react.useMemo)(function() {
    if (d) return function(e3) {
      return function(t2) {
        w2((0, import_react.createElement)(g, { cell: e3 }), t2), c(e3), null == u || u(e3, t2);
      };
    };
  }, [d, w2, g, c, u]), I = (0, import_react.useMemo)(function() {
    if (d) return function(e3) {
      return function(t2) {
        w2((0, import_react.createElement)(g, { cell: e3 }), t2), null == h || h(e3, t2);
      };
    };
  }, [d, w2, g, h]), S2 = (0, import_react.useMemo)(function() {
    if (d) return function(e3) {
      return function(t2) {
        P(), c(null), null == v || v(e3, t2);
      };
    };
  }, [d, P, c, v]), M = (0, import_react.useMemo)(function() {
    if (d) return function(e3) {
      return function(t2) {
        null == f || f(e3, t2);
      };
    };
  }, [d, f]);
  return i2 = "rect" === r2 ? ie : "circle" === r2 ? oe : r2, (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: x(function(e3, t2) {
    return (0, import_react.createElement)(i2, { cell: t2, borderRadius: a2, borderWidth: l2, animatedProps: e3, enableLabels: b, onMouseEnter: O, onMouseMove: I, onMouseLeave: S2, onClick: M });
  }) });
};
var de = function(e2) {
  var t2 = e2.cells, i2 = e2.annotations, o2 = te(t2, i2);
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: o2.map(function(e3, t3) {
    return (0, import_jsx_runtime.jsx)(R, Y({}, e3), t3);
  }) });
};
var ce = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var ue = function(e2) {
  var i2 = e2.data, o2 = e2.layers, a2 = void 0 === o2 ? H.layers : o2, l2 = e2.valueFormat, d = e2.width, c = e2.height, u = e2.margin, s = e2.forceSquare, h = void 0 === s ? H.forceSquare : s, g = e2.xInnerPadding, b = void 0 === g ? H.xInnerPadding : g, p = e2.xOuterPadding, x = void 0 === p ? H.xOuterPadding : p, C3 = e2.yInnerPadding, P = void 0 === C3 ? H.yInnerPadding : C3, O = e2.yOuterPadding, I = void 0 === O ? H.yOuterPadding : O, S2 = e2.sizeVariation, M = void 0 === S2 ? H.sizeVariation : S2, T = e2.cellComponent, W = void 0 === T ? H.cellComponent : T, L = e2.opacity, k2 = void 0 === L ? H.opacity : L, R3 = e2.activeOpacity, B3 = void 0 === R3 ? H.activeOpacity : R3, q = e2.inactiveOpacity, E2 = void 0 === q ? H.inactiveOpacity : q, z2 = e2.borderRadius, A = void 0 === z2 ? H.borderRadius : z2, F = e2.borderWidth, X = void 0 === F ? H.borderWidth : F, G2 = e2.borderColor, j4 = void 0 === G2 ? H.borderColor : G2, D2 = e2.enableGridX, _2 = void 0 === D2 ? H.enableGridX : D2, J3 = e2.enableGridY, K2 = void 0 === J3 ? H.enableGridY : J3, N2 = e2.axisTop, Q2 = void 0 === N2 ? H.axisTop : N2, U2 = e2.axisRight, Z2 = void 0 === U2 ? H.axisRight : U2, $2 = e2.axisBottom, te2 = void 0 === $2 ? H.axisBottom : $2, ie2 = e2.axisLeft, oe2 = void 0 === ie2 ? H.axisLeft : ie2, ne2 = e2.enableLabels, re2 = void 0 === ne2 ? H.enableLabels : ne2, ae2 = e2.label, ce2 = void 0 === ae2 ? H.label : ae2, ue2 = e2.labelTextColor, se2 = void 0 === ue2 ? H.labelTextColor : ue2, he2 = e2.colors, ve2 = void 0 === he2 ? H.colors : he2, fe2 = e2.emptyColor, ge2 = void 0 === fe2 ? H.emptyColor : fe2, be2 = e2.legends, pe2 = void 0 === be2 ? H.legends : be2, ye2 = e2.annotations, me = void 0 === ye2 ? H.annotations : ye2, xe = e2.isInteractive, Ce = void 0 === xe ? H.isInteractive : xe, we = e2.onMouseEnter, Pe = e2.onMouseMove, Oe = e2.onMouseLeave, Ie = e2.onClick, Se = e2.hoverTarget, Me = void 0 === Se ? H.hoverTarget : Se, Te = e2.tooltip, We = void 0 === Te ? H.tooltip : Te, Le = e2.role, ke = e2.ariaLabel, Ve = e2.ariaLabelledBy, Re = e2.ariaDescribedBy, Be = wt(d, c, u), qe = Be.margin, Ee = Be.innerWidth, ze = Be.innerHeight, Ae = Be.outerWidth, Fe = Be.outerHeight, Xe2 = ee({ data: i2, valueFormat: l2, width: Ee, height: ze, forceSquare: h, xInnerPadding: b, xOuterPadding: x, yInnerPadding: P, yOuterPadding: I, sizeVariation: M, colors: ve2, emptyColor: ge2, opacity: k2, activeOpacity: B3, inactiveOpacity: E2, borderColor: j4, label: ce2, labelTextColor: se2, hoverTarget: Me }), Ye = Xe2.width, Ge = Xe2.height, je = Xe2.offsetX, He = Xe2.offsetY, De = Xe2.xScale, _e = Xe2.yScale, Je = Xe2.cells, Ke = Xe2.colorScale, Ne = Xe2.activeCell, Qe = Xe2.setActiveCell, Ue = (0, import_react.useMemo)(function() {
    return Y({}, qe, { top: qe.top + He, left: qe.left + je });
  }, [qe, je, He]), Ze = { grid: null, axes: null, cells: null, legends: null, annotations: null };
  a2.includes("grid") && (Ze.grid = (0, import_jsx_runtime.jsx)(C, { width: Ye, height: Ge, xScale: _2 ? De : null, yScale: K2 ? _e : null }, "grid")), a2.includes("axes") && (Ze.axes = (0, import_jsx_runtime.jsx)(B, { xScale: De, yScale: _e, width: Ye, height: Ge, top: Q2, right: Z2, bottom: te2, left: oe2 }, "axes")), a2.includes("cells") && (Ze.cells = (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_jsx_runtime.jsx)(le, { cells: Je, cellComponent: W, borderRadius: A, borderWidth: X, isInteractive: Ce, setActiveCell: Qe, onMouseEnter: we, onMouseMove: Pe, onMouseLeave: Oe, onClick: Ie, tooltip: We, enableLabels: re2 }) }, "cells")), a2.includes("legends") && null !== Ke && (Ze.legends = (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: pe2.map(function(e3, t2) {
    return (0, import_react.createElement)(C2, Y({}, e3, { key: t2, containerWidth: Ye, containerHeight: Ge, scale: Ke }));
  }) }, "legends")), a2.includes("annotations") && me.length > 0 && (Ze.annotations = (0, import_jsx_runtime.jsx)(de, { cells: Je, annotations: me }, "annotations"));
  var $e = { cells: Je, activeCell: Ne, setActiveCell: Qe };
  return (0, import_jsx_runtime.jsx)(gn, { width: Ae, height: Fe, margin: Object.assign({}, Ue, { top: Ue.top, left: Ue.left }), role: Le, ariaLabel: ke, ariaLabelledBy: Ve, ariaDescribedBy: Re, children: a2.map(function(e3, t2) {
    var i3;
    return "function" == typeof e3 ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e3, $e) }, t2) : null != (i3 = null == Ze ? void 0 : Ze[e3]) ? i3 : null;
  }) });
};
var se = function(e2) {
  var t2 = e2.isInteractive, i2 = void 0 === t2 ? H.isInteractive : t2, o2 = e2.animate, n2 = void 0 === o2 ? H.animate : o2, r2 = e2.motionConfig, a2 = void 0 === r2 ? H.motionConfig : r2, l2 = e2.theme, d = e2.renderWrapper, c = G(e2, ce);
  return (0, import_jsx_runtime.jsx)(St, { animate: n2, isInteractive: i2, motionConfig: a2, renderWrapper: d, theme: l2, children: (0, import_jsx_runtime.jsx)(ue, Y({ isInteractive: i2 }, c)) });
};
var he = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(t2) {
    var i2 = t2.width, o2 = t2.height;
    return (0, import_jsx_runtime.jsx)(se, Y({ width: i2, height: o2 }, e2));
  } });
};
var ve = function(e2, t2) {
  var i2 = t2.cell, o2 = i2.x, n2 = i2.y, r2 = i2.width, a2 = i2.height, l2 = i2.color, d = i2.borderColor, c = i2.opacity, u = i2.labelTextColor, s = i2.label, h = t2.borderWidth, v = t2.enableLabels, f = t2.theme;
  e2.save(), e2.globalAlpha = c, e2.fillStyle = l2, h > 0 && (e2.strokeStyle = d, e2.lineWidth = h), e2.fillRect(o2 - r2 / 2, n2 - a2 / 2, r2, a2), h > 0 && e2.strokeRect(o2 - r2 / 2, n2 - a2 / 2, r2, a2), v && (e2.fillStyle = u, e2.font = (f.labels.text.fontWeight ? f.labels.text.fontWeight + " " : "") + f.labels.text.fontSize + "px " + f.labels.text.fontFamily, e2.textAlign = "center", e2.textBaseline = "middle", e2.fillText(s, o2, n2)), e2.restore();
};
var fe = function(e2, t2) {
  var i2 = t2.cell, o2 = i2.x, n2 = i2.y, r2 = i2.width, a2 = i2.height, l2 = i2.color, d = i2.borderColor, c = i2.opacity, u = i2.labelTextColor, s = i2.label, h = t2.borderWidth, v = t2.enableLabels, f = t2.theme;
  e2.save(), e2.globalAlpha = c;
  var g = Math.min(r2, a2) / 2;
  e2.fillStyle = l2, h > 0 && (e2.strokeStyle = d, e2.lineWidth = h), e2.beginPath(), e2.arc(o2, n2, g, 0, 2 * Math.PI), e2.fill(), h > 0 && e2.stroke(), v && (e2.fillStyle = u, e2.font = (f.labels.text.fontWeight ? f.labels.text.fontWeight + " " : "") + f.labels.text.fontSize + "px " + f.labels.text.fontFamily, e2.textAlign = "center", e2.textBaseline = "middle", e2.fillText(s, o2, n2)), e2.restore();
};
var ge = ["theme", "isInteractive", "animate", "motionConfig", "renderWrapper"];
var be = function(e2) {
  var i2, r2 = e2.data, c = e2.layers, u = void 0 === c ? D.layers : c, s = e2.valueFormat, h = e2.width, f = e2.height, g = e2.margin, y = e2.xInnerPadding, m = void 0 === y ? D.xInnerPadding : y, w2 = e2.xOuterPadding, O = void 0 === w2 ? D.xOuterPadding : w2, I = e2.yInnerPadding, S2 = void 0 === I ? D.yInnerPadding : I, M = e2.yOuterPadding, L = void 0 === M ? D.yOuterPadding : M, R3 = e2.forceSquare, B3 = void 0 === R3 ? D.forceSquare : R3, q = e2.sizeVariation, E2 = void 0 === q ? D.sizeVariation : q, z2 = e2.renderCell, A = void 0 === z2 ? D.renderCell : z2, F = e2.opacity, X = void 0 === F ? D.opacity : F, G2 = e2.activeOpacity, j4 = void 0 === G2 ? D.activeOpacity : G2, H2 = e2.inactiveOpacity, _2 = void 0 === H2 ? D.inactiveOpacity : H2, J3 = e2.borderWidth, K2 = void 0 === J3 ? D.borderWidth : J3, N2 = e2.borderColor, Q2 = void 0 === N2 ? D.borderColor : N2, U2 = e2.enableGridX, Z2 = void 0 === U2 ? D.enableGridX : U2, $2 = e2.enableGridY, ie2 = void 0 === $2 ? D.enableGridY : $2, oe2 = e2.axisTop, ne2 = void 0 === oe2 ? D.axisTop : oe2, re2 = e2.axisRight, ae2 = void 0 === re2 ? D.axisRight : re2, le2 = e2.axisBottom, de2 = void 0 === le2 ? D.axisBottom : le2, ce2 = e2.axisLeft, ue2 = void 0 === ce2 ? D.axisLeft : ce2, se2 = e2.enableLabels, he2 = void 0 === se2 ? D.enableLabels : se2, ge2 = e2.label, be2 = void 0 === ge2 ? D.label : ge2, pe2 = e2.labelTextColor, ye2 = void 0 === pe2 ? D.labelTextColor : pe2, me = e2.colors, xe = void 0 === me ? D.colors : me, Ce = e2.emptyColor, we = void 0 === Ce ? D.emptyColor : Ce, Pe = e2.legends, Oe = void 0 === Pe ? D.legends : Pe, Ie = e2.annotations, Se = void 0 === Ie ? D.annotations : Ie, Me = e2.isInteractive, Te = void 0 === Me ? D.isInteractive : Me, We = e2.onClick, Le = e2.hoverTarget, ke = void 0 === Le ? D.hoverTarget : Le, Ve = e2.tooltip, Re = void 0 === Ve ? D.tooltip : Ve, Be = e2.role, qe = e2.ariaLabel, Ee = e2.ariaLabelledBy, ze = e2.ariaDescribedBy, Ae = e2.pixelRatio, Fe = void 0 === Ae ? D.pixelRatio : Ae, Xe2 = (0, import_react.useRef)(null), Ye = wt(h, f, g), Ge = Ye.margin, je = Ye.innerWidth, He = Ye.innerHeight, De = Ye.outerWidth, _e = Ye.outerHeight, Je = ee({ data: r2, valueFormat: s, width: je, height: He, xInnerPadding: m, xOuterPadding: O, yInnerPadding: S2, yOuterPadding: L, forceSquare: B3, sizeVariation: E2, colors: xe, emptyColor: we, opacity: X, activeOpacity: j4, inactiveOpacity: _2, borderColor: Q2, label: be2, labelTextColor: ye2, hoverTarget: ke }), Ke = Je.width, Ne = Je.height, Qe = Je.offsetX, Ue = Je.offsetY, Ze = Je.xScale, $e = Je.yScale, et = Je.cells, tt = Je.colorScale, it = Je.activeCell, ot = Je.setActiveCell, nt = (0, import_react.useMemo)(function() {
    return Y({}, Ge, { top: Ge.top + Ue, left: Ge.left + Qe });
  }, [Ge, Qe, Ue]), rt = te(et, Se), at = j2({ annotations: rt });
  i2 = "function" == typeof A ? A : "circle" === A ? fe : ve;
  var lt = zt(), dt = (0, import_react.useMemo)(function() {
    return { cells: et, activeCell: it, setActiveCell: ot };
  }, [et, it, ot]);
  (0, import_react.useEffect)(function() {
    if (null !== Xe2.current) {
      var e3 = Xe2.current.getContext("2d");
      e3 && (Xe2.current.width = De * Fe, Xe2.current.height = _e * Fe, e3.scale(Fe, Fe), e3.fillStyle = lt.background, e3.fillRect(0, 0, De, _e), e3.translate(nt.left, nt.top), u.forEach(function(t2) {
        "grid" === t2 ? (e3.lineWidth = lt.grid.line.strokeWidth, e3.strokeStyle = lt.grid.line.stroke, Z2 && z(e3, { width: Ke, height: Ne, scale: Ze, axis: "x" }), ie2 && z(e3, { width: Ke, height: Ne, scale: $e, axis: "y" })) : "axes" === t2 ? j(e3, { xScale: Ze, yScale: $e, width: Ke, height: Ne, top: ne2, right: ae2, bottom: de2, left: ue2, theme: lt }) : "cells" === t2 ? (e3.textAlign = "center", e3.textBaseline = "middle", et.forEach(function(t3) {
          i2(e3, { cell: t3, borderWidth: K2, enableLabels: he2, theme: lt });
        })) : "legends" === t2 && null !== tt ? Oe.forEach(function(t3) {
          E(e3, Y({}, t3, { containerWidth: Ke, containerHeight: Ne, scale: tt, theme: lt }));
        }) : "annotations" === t2 ? J(e3, { annotations: at, theme: lt }) : "function" == typeof t2 && t2(e3, dt);
      }));
    }
  }, [Xe2, Fe, De, _e, Ke, Ne, nt, u, dt, et, i2, Z2, ie2, ne2, ae2, de2, ue2, Ze, $e, lt, K2, he2, tt, Oe, at]);
  var ct = k(), ut = ct.showTooltipFromEvent, st = ct.hideTooltip, ht = (0, import_react.useCallback)(function(e3) {
    if (null !== Xe2.current) {
      var t2 = Sn(Xe2.current, e3), i3 = t2[0], o2 = t2[1], r3 = et.find(function(e4) {
        return jn(e4.x + nt.left - e4.width / 2, e4.y + nt.top - e4.height / 2, e4.width, e4.height, i3, o2);
      });
      void 0 !== r3 ? (ot(r3), ut((0, import_react.createElement)(Re, { cell: r3 }), e3)) : (ot(null), st());
    }
  }, [Xe2, et, nt, ot, ut, st, Re]), vt = (0, import_react.useCallback)(function() {
    ot(null), st();
  }, [ot, st]), ft = (0, import_react.useCallback)(function(e3) {
    null !== it && (null == We || We(it, e3));
  }, [it, We]);
  return (0, import_jsx_runtime.jsx)("canvas", { ref: Xe2, width: De * Fe, height: _e * Fe, style: { width: De, height: _e }, onMouseEnter: Te ? ht : void 0, onMouseMove: Te ? ht : void 0, onMouseLeave: Te ? vt : void 0, onClick: Te ? ft : void 0, role: Be, "aria-label": qe, "aria-labelledby": Ee, "aria-describedby": ze });
};
var pe = function(e2) {
  var t2 = e2.theme, i2 = e2.isInteractive, o2 = void 0 === i2 ? D.isInteractive : i2, n2 = e2.animate, r2 = void 0 === n2 ? D.animate : n2, a2 = e2.motionConfig, l2 = void 0 === a2 ? D.motionConfig : a2, d = e2.renderWrapper, c = G(e2, ge);
  return (0, import_jsx_runtime.jsx)(St, { isInteractive: o2, animate: r2, motionConfig: l2, theme: t2, renderWrapper: d, children: (0, import_jsx_runtime.jsx)(be, Y({ isInteractive: o2 }, c)) });
};
var ye = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(t2) {
    var i2 = t2.width, o2 = t2.height;
    return (0, import_jsx_runtime.jsx)(pe, Y({ width: i2, height: o2 }, e2));
  } });
};
export {
  se as HeatMap,
  pe as HeatMapCanvas,
  he as ResponsiveHeatMap,
  ye as ResponsiveHeatMapCanvas,
  D as canvasDefaultProps,
  j3 as commonDefaultProps,
  J2 as computeCells,
  _ as computeLayout,
  K as computeSizeScale,
  Q as getCellAnnotationDimensions,
  N as getCellAnnotationPosition,
  H as svgDefaultProps,
  te as useCellAnnotations,
  U as useComputeCells,
  ee as useHeatMap
};
//# sourceMappingURL=@nivo_heatmap.js.map
